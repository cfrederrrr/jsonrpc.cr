crystal_doc_search_index_callback({"repository_name":"github.com/galvertez/jsonrpc.cr","body":"# jsonrpc.cr\n\n[![Build Status](https://travis-ci.com/galvertez/jsonrpc.cr.svg?branch=master)](https://travis-ci.com/galvertez/jsonrpc.cr)\n","program":{"html_id":"github.com/galvertez/jsonrpc.cr/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"github.com/galvertez/jsonrpc.cr","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/galvertez/jsonrpc.cr/JSONRPC","path":"JSONRPC.html","kind":"module","full_name":"JSONRPC","name":"JSONRPC","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"jsonrpc.cr","line_number":3,"url":"https://github.com/galvertez/jsonrpc.cr/blob/200300636766d003c24da5b79285f674e3964723/src/jsonrpc.cr"}],"repository_name":"github.com/galvertez/jsonrpc.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"\"0.1.0\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/galvertez/jsonrpc.cr/JSONRPC/Client","path":"JSONRPC/Client.html","kind":"class","full_name":"JSONRPC::Client","name":"Client","abstract":true,"superclass":{"html_id":"github.com/galvertez/jsonrpc.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/galvertez/jsonrpc.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/galvertez/jsonrpc.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"jsonrpc/client.cr","line_number":9,"url":"https://github.com/galvertez/jsonrpc.cr/blob/200300636766d003c24da5b79285f674e3964723/src/jsonrpc/client.cr"}],"repository_name":"github.com/galvertez/jsonrpc.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/galvertez/jsonrpc.cr/Something","kind":"class","full_name":"Something","name":"Something"}],"including_types":[],"namespace":{"html_id":"github.com/galvertez/jsonrpc.cr/JSONRPC","kind":"module","full_name":"JSONRPC","name":"JSONRPC"},"doc":"Client is, and can only be a wrapper for your favorite TCP/HTTP/S client\nIt provides some convenience methods for handling method invocations, i.e.\n`JSONRPC::Request` and `JSONRPC::Response` but it is otherwise perfectly dumb\n\nThis enables you to use whatever transport client you like, without having to\ndeal much with the JSON RPC logic. However, it does mean that you will have to handle\nthe transport logic yourself.\n","summary":"<p>Client is, and can only be a wrapper for your favorite TCP/HTTP/S client It provides some convenience methods for handling method invocations, i.e.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"submit_batch(json:String):String-instance-method","html_id":"submit_batch(json:String):String-instance-method","name":"submit_batch","doc":null,"summary":null,"abstract":true,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"String"}],"args_string":"(json : String) : String","source_link":"https://github.com/galvertez/jsonrpc.cr/blob/200300636766d003c24da5b79285f674e3964723/src/jsonrpc/client.cr#L17","def":{"name":"submit_batch","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":""}},{"id":"submit_request(json:String):String-instance-method","html_id":"submit_request(json:String):String-instance-method","name":"submit_request","doc":"`submit_request` method should take one argument (serialized JSON) and should return\n`String` (which will be serialized JSON as well)\n\nThis method should handle the actual conveyance of data to the server, but should\n_never_ attempt to parse it. That will be handled by the `#invoke_method` methods","summary":"<p><code><a href=\"../JSONRPC/Client.html#submit_request%28json%3AString%29%3AString-instance-method\">#submit_request</a></code> method should take one argument (serialized JSON) and should return <code>String</code> (which will be serialized JSON as well)</p>","abstract":true,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"String"}],"args_string":"(json : String) : String","source_link":"https://github.com/galvertez/jsonrpc.cr/blob/200300636766d003c24da5b79285f674e3964723/src/jsonrpc/client.cr#L16","def":{"name":"submit_request","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":""}}],"macros":[{"id":"rpc_notification(name,params)-macro","html_id":"rpc_notification(name,params)-macro","name":"rpc_notification","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":""}],"args_string":"(name, params)","source_link":"https://github.com/galvertez/jsonrpc.cr/blob/200300636766d003c24da5b79285f674e3964723/src/jsonrpc/client.cr#L29","def":{"name":"rpc_notification","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    def \n{{ name.id }}\n(\n%params\n : \n{{ params }}\n) : Bool\n      request = JSONRPC::Request(\n{{ params }}\n).new(\n%params\n)\n      response = nil\n      context = JSONRPC::Context(\n{{ params }}\n, nil).new(request, response)\n      submit_response(request.to_json)\n      return true\n    \nend\n  \n"}},{"id":"rpcdef(name,params,result)-macro","html_id":"rpcdef(name,params,result)-macro","name":"rpcdef","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":""},{"name":"result","doc":null,"default_value":"","external_name":"result","restriction":""}],"args_string":"(name, params, result)","source_link":"https://github.com/galvertez/jsonrpc.cr/blob/200300636766d003c24da5b79285f674e3964723/src/jsonrpc/client.cr#L19","def":{"name":"rpcdef","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":""},{"name":"result","doc":null,"default_value":"","external_name":"result","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% method_name = name.underscore.tr(\"- \", \"_\") %}\n\n    def \n{{ method_name.id }}\n(params : \n{{ params }}\n) : JSONRPC::Context(\n{{ params }}\n, \n{{ result }}\n)\n      request = JSONRPC::Request(\n{{ params }}\n).new(params)\n      \n%response\n = submit_request(request.to_json)\n      response = JSONRPC::Response(\n{{ result }}\n).new(\n%response\n)\n      JSONRPC::Context(\n{{ params }}\n, \n{{ result }}\n).new(request, response)\n    \nend\n  \n"}}],"types":[]},{"html_id":"github.com/galvertez/jsonrpc.cr/JSONRPC/Context","path":"JSONRPC/Context.html","kind":"class","full_name":"JSONRPC::Context(P, R)","name":"Context","abstract":false,"superclass":{"html_id":"github.com/galvertez/jsonrpc.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/galvertez/jsonrpc.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/galvertez/jsonrpc.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"jsonrpc/context.cr","line_number":9,"url":"https://github.com/galvertez/jsonrpc.cr/blob/200300636766d003c24da5b79285f674e3964723/src/jsonrpc/context.cr"}],"repository_name":"github.com/galvertez/jsonrpc.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/galvertez/jsonrpc.cr/JSONRPC","kind":"module","full_name":"JSONRPC","name":"JSONRPC"},"doc":"A container class for JSON RPC method invocation includes the name, id, request and response\nof the scenario\n\nComes with some convenience methods for assessing the status of the invocation and\ninspecting the data of the request and response\n\nNeither clientside nor serverside should realistically bother with initializing this type\nThis shard intends to abstract that away from users.","summary":"<p>A container class for JSON RPC method invocation includes the name, id, request and response of the scenario</p>","class_methods":[],"constructors":[{"id":"new(request:JSONRPC::Request(P),response:JSONRPC::Response(R))-class-method","html_id":"new(request:JSONRPC::Request(P),response:JSONRPC::Response(R))-class-method","name":"new","doc":"Either side initializer if both `@request` and `@response` are already initialized","summary":"<p>Either side initializer if both <code>@request</code> and <code>@response</code> are already initialized</p>","abstract":false,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"JSONRPC::Request(P)"},{"name":"response","doc":null,"default_value":"","external_name":"response","restriction":"JSONRPC::Response(R)"}],"args_string":"(request : JSONRPC::Request(P), response : JSONRPC::Response(R))","source_link":"https://github.com/galvertez/jsonrpc.cr/blob/200300636766d003c24da5b79285f674e3964723/src/jsonrpc/context.cr#L18","def":{"name":"new","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"JSONRPC::Request(P)"},{"name":"response","doc":null,"default_value":"","external_name":"response","restriction":"JSONRPC::Response(R)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Context(P, R).allocate\n_.initialize(request, response)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"error:JSONRPC::Error-instance-method","html_id":"error:JSONRPC::Error-instance-method","name":"error","doc":"Easy access to the error of the `@response`","summary":"<p>Easy access to the error of the <code>@response</code></p>","abstract":false,"args":[],"args_string":" : JSONRPC::Error","source_link":"https://github.com/galvertez/jsonrpc.cr/blob/200300636766d003c24da5b79285f674e3964723/src/jsonrpc/context.cr#L39","def":{"name":"error","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"JSONRPC::Error","visibility":"Public","body":"@response.error"}},{"id":"error?:Bool-instance-method","html_id":"error?:Bool-instance-method","name":"error?","doc":"Returns true if `@response` does not exist, or if the error `@response`\nobject is not nil. Otherwise, false.\n\nThis may change in the future, as there could be a situation where access to\nan instance of `JSONRPC::Context` is necessary while it's still waiting on a\nresponse from the server.","summary":"<p>Returns true if <code>@response</code> does not exist, or if the error <code>@response</code> object is not nil.</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/galvertez/jsonrpc.cr/blob/200300636766d003c24da5b79285f674e3964723/src/jsonrpc/context.cr#L49","def":{"name":"error?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"if @response\nelse\n  return true\nend\n!(!@response.error)\n"}},{"id":"id:SID-instance-method","html_id":"id:SID-instance-method","name":"id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : SID","source_link":"https://github.com/galvertez/jsonrpc.cr/blob/200300636766d003c24da5b79285f674e3964723/src/jsonrpc/context.cr#L15","def":{"name":"id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"SID","visibility":"Public","body":"@id"}},{"id":"name:String-instance-method","html_id":"name:String-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/galvertez/jsonrpc.cr/blob/200300636766d003c24da5b79285f674e3964723/src/jsonrpc/context.cr#L14","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@name"}},{"id":"notification?:Bool-instance-method","html_id":"notification?:Bool-instance-method","name":"notification?","doc":"According to JSON RPC 2.0 specification, a request without an `@id` is\nconsidered a notification and does not require a response","summary":"<p>According to JSON RPC 2.0 specification, a request without an <code>@id</code> is considered a notification and does not require a response</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/galvertez/jsonrpc.cr/blob/200300636766d003c24da5b79285f674e3964723/src/jsonrpc/context.cr#L24","def":{"name":"notification?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@id.nil?"}},{"id":"params:P-instance-method","html_id":"params:P-instance-method","name":"params","doc":"Easy access to the params of the `@request`","summary":"<p>Easy access to the params of the <code>@request</code></p>","abstract":false,"args":[],"args_string":" : P","source_link":"https://github.com/galvertez/jsonrpc.cr/blob/200300636766d003c24da5b79285f674e3964723/src/jsonrpc/context.cr#L29","def":{"name":"params","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"P","visibility":"Public","body":"@request.params"}},{"id":"request:JSONRPC::Request(P)-instance-method","html_id":"request:JSONRPC::Request(P)-instance-method","name":"request","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : JSONRPC::Request(P)","source_link":"https://github.com/galvertez/jsonrpc.cr/blob/200300636766d003c24da5b79285f674e3964723/src/jsonrpc/context.cr#L16","def":{"name":"request","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"JSONRPC::Request(P)","visibility":"Public","body":"@request"}},{"id":"response:JSONRPC::Response(R)?-instance-method","html_id":"response:JSONRPC::Response(R)?-instance-method","name":"response","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : JSONRPC::Response(R)?","source_link":"https://github.com/galvertez/jsonrpc.cr/blob/200300636766d003c24da5b79285f674e3964723/src/jsonrpc/context.cr#L17","def":{"name":"response","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"JSONRPC::Response(R) | ::Nil","visibility":"Public","body":"@response"}},{"id":"result:R-instance-method","html_id":"result:R-instance-method","name":"result","doc":"Easy access to the result of the `@response`","summary":"<p>Easy access to the result of the <code>@response</code></p>","abstract":false,"args":[],"args_string":" : R","source_link":"https://github.com/galvertez/jsonrpc.cr/blob/200300636766d003c24da5b79285f674e3964723/src/jsonrpc/context.cr#L34","def":{"name":"result","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"R","visibility":"Public","body":"@response.result"}}],"macros":[],"types":[{"html_id":"github.com/galvertez/jsonrpc.cr/JSONRPC/Context/SID","path":"JSONRPC/Context/SID.html","kind":"alias","full_name":"JSONRPC::Context::SID","name":"SID","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"jsonrpc/context.cr","line_number":10,"url":"https://github.com/galvertez/jsonrpc.cr/blob/200300636766d003c24da5b79285f674e3964723/src/jsonrpc/context.cr"}],"repository_name":"github.com/galvertez/jsonrpc.cr","program":false,"enum":false,"alias":true,"aliased":"(Int32 | String | Nil)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/galvertez/jsonrpc.cr/JSONRPC/Context","kind":"class","full_name":"JSONRPC::Context(P, R)","name":"Context"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"github.com/galvertez/jsonrpc.cr/JSONRPC/Error","path":"JSONRPC/Error.html","kind":"class","full_name":"JSONRPC::Error","name":"Error","abstract":false,"superclass":{"html_id":"github.com/galvertez/jsonrpc.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/galvertez/jsonrpc.cr/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"github.com/galvertez/jsonrpc.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/galvertez/jsonrpc.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"jsonrpc/error.cr","line_number":4,"url":"https://github.com/galvertez/jsonrpc.cr/blob/200300636766d003c24da5b79285f674e3964723/src/jsonrpc/error.cr"}],"repository_name":"github.com/galvertez/jsonrpc.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/galvertez/jsonrpc.cr/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/galvertez/jsonrpc.cr/JSONRPC","kind":"module","full_name":"JSONRPC","name":"JSONRPC"},"doc":"Virtual error type so child classes can be handled the\nin the same way\n","summary":"<p>Virtual error type so child classes can be handled the in the same way </p>","class_methods":[{"id":"internal_error(data:String?=nil)-class-method","html_id":"internal_error(data:String?=nil)-class-method","name":"internal_error","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"nil","external_name":"data","restriction":"String | ::Nil"}],"args_string":"(data : String? = <span class=\"n\">nil</span>)","source_link":"https://github.com/galvertez/jsonrpc.cr/blob/200300636766d003c24da5b79285f674e3964723/src/jsonrpc/error.cr#L39","def":{"name":"internal_error","args":[{"name":"data","doc":null,"default_value":"nil","external_name":"data","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new(\"Internal error\", -32603, data)"}},{"id":"invalid_params(data:String?=nil)-class-method","html_id":"invalid_params(data:String?=nil)-class-method","name":"invalid_params","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"nil","external_name":"data","restriction":"String | ::Nil"}],"args_string":"(data : String? = <span class=\"n\">nil</span>)","source_link":"https://github.com/galvertez/jsonrpc.cr/blob/200300636766d003c24da5b79285f674e3964723/src/jsonrpc/error.cr#L35","def":{"name":"invalid_params","args":[{"name":"data","doc":null,"default_value":"nil","external_name":"data","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new(\"Invalid params\", -32602, data)"}},{"id":"invalid_request(data:String?=nil)-class-method","html_id":"invalid_request(data:String?=nil)-class-method","name":"invalid_request","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"nil","external_name":"data","restriction":"String | ::Nil"}],"args_string":"(data : String? = <span class=\"n\">nil</span>)","source_link":"https://github.com/galvertez/jsonrpc.cr/blob/200300636766d003c24da5b79285f674e3964723/src/jsonrpc/error.cr#L27","def":{"name":"invalid_request","args":[{"name":"data","doc":null,"default_value":"nil","external_name":"data","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new(\"Invalid Request\", -32600, data)"}},{"id":"method_not_found(data:String?=nil)-class-method","html_id":"method_not_found(data:String?=nil)-class-method","name":"method_not_found","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"nil","external_name":"data","restriction":"String | ::Nil"}],"args_string":"(data : String? = <span class=\"n\">nil</span>)","source_link":"https://github.com/galvertez/jsonrpc.cr/blob/200300636766d003c24da5b79285f674e3964723/src/jsonrpc/error.cr#L31","def":{"name":"method_not_found","args":[{"name":"data","doc":null,"default_value":"nil","external_name":"data","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new(\"Method not found\", -32601, data)"}},{"id":"parse_error(data:String?=nil)-class-method","html_id":"parse_error(data:String?=nil)-class-method","name":"parse_error","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"nil","external_name":"data","restriction":"String | ::Nil"}],"args_string":"(data : String? = <span class=\"n\">nil</span>)","source_link":"https://github.com/galvertez/jsonrpc.cr/blob/200300636766d003c24da5b79285f674e3964723/src/jsonrpc/error.cr#L43","def":{"name":"parse_error","args":[{"name":"data","doc":null,"default_value":"nil","external_name":"data","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new(\"Parse error\", -32700, data)"}}],"constructors":[{"id":"new(message:String,code:Int32,data:String?)-class-method","html_id":"new(message:String,code:Int32,data:String?)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"Int32"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"String | ::Nil"}],"args_string":"(message : String, code : Int32, data : String?)","source_link":"https://github.com/galvertez/jsonrpc.cr/blob/200300636766d003c24da5b79285f674e3964723/src/jsonrpc/error.cr#L23","def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"Int32"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, code, data)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(pull:JSON::PullParser)-class-method","html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"pull","doc":null,"default_value":"","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","source_link":"https://github.com/galvertez/jsonrpc.cr/blob/200300636766d003c24da5b79285f674e3964723/src/jsonrpc/error.cr#L5","def":{"name":"new","args":[{"name":"pull","doc":null,"default_value":"","external_name":"pull","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"instance = allocate\ninstance.initialize(__pull_for_json_serializable: pull)\nif instance.responds_to?(:finalize)\n  GC.add_finalizer(instance)\nend\ninstance\n"}}],"instance_methods":[{"id":"code:Int32-instance-method","html_id":"code:Int32-instance-method","name":"code","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/galvertez/jsonrpc.cr/blob/200300636766d003c24da5b79285f674e3964723/src/jsonrpc/error.cr#L10","def":{"name":"code","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@code"}},{"id":"data:String?-instance-method","html_id":"data:String?-instance-method","name":"data","doc":"Data will (unfortunately) be restricted to `String` for now, since there\nisn't a clean way to predictably parse `JSONRPC::Response(R)` with the potential\nfor an error object of unknowable type without turning `JSONRPC::Response(R)`\ninto an abstract class.\n\nDoing so would require users to define their own responses for every RPC method,\nboth clientside and serverside, containing every possible error that an RPC call\ncould ever result in, including the standard errors.\n\nSince I predict that most people would simply use `String` for the `@data` attribute\nanyway, I deem this slight departure from the JSONRPC 2.0 spec to be acceptable","summary":"<p>Data will (unfortunately) be restricted to <code>String</code> for now, since there isn't a clean way to predictably parse <code><a href=\"../JSONRPC/Response.html\">JSONRPC::Response</a>(R)</code> with the potential for an error object of unknowable type without turning <code><a href=\"../JSONRPC/Response.html\">JSONRPC::Response</a>(R)</code> into an abstract class.</p>","abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/galvertez/jsonrpc.cr/blob/200300636766d003c24da5b79285f674e3964723/src/jsonrpc/error.cr#L23","def":{"name":"data","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@data"}},{"id":"message:String-instance-method","html_id":"message:String-instance-method","name":"message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/galvertez/jsonrpc.cr/blob/200300636766d003c24da5b79285f674e3964723/src/jsonrpc/error.cr#L9","def":{"name":"message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@message"}}],"macros":[],"types":[]},{"html_id":"github.com/galvertez/jsonrpc.cr/JSONRPC/Handler","path":"JSONRPC/Handler.html","kind":"class","full_name":"JSONRPC::Handler","name":"Handler","abstract":true,"superclass":{"html_id":"github.com/galvertez/jsonrpc.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/galvertez/jsonrpc.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/galvertez/jsonrpc.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"jsonrpc/handler.cr","line_number":1,"url":"https://github.com/galvertez/jsonrpc.cr/blob/200300636766d003c24da5b79285f674e3964723/src/jsonrpc/handler.cr"}],"repository_name":"github.com/galvertez/jsonrpc.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/galvertez/jsonrpc.cr/JSONRPC","kind":"module","full_name":"JSONRPC","name":"JSONRPC"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"handle(json:String,&block):String-instance-method","html_id":"handle(json:String,&amp;block):String-instance-method","name":"handle","doc":"Searches the request for the \"method\" key and passes it, and the request\nto `invoke_rpc(String, JSON::PullParser) : String`","summary":"<p>Searches the request for the \"method\" key and passes it, and the request to <code>invoke_rpc(String, JSON::PullParser) : String</code></p>","abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"String"}],"args_string":"(json : String, &block) : String","source_link":"https://github.com/galvertez/jsonrpc.cr/blob/200300636766d003c24da5b79285f674e3964723/src/jsonrpc/handler.cr#L9","def":{"name":"handle","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":""},"return_type":"String","visibility":"Public","body":"parser = JSON::PullParser.new(json)\nidentifier = JSON::PullParser.new(json)\ncase parser.kind\nwhen :begin_object\n  handle_request(parser, identifier, &block)\nwhen :begin_array\n  handle_batch(parser, identifier, &block)\nelse\n  (JSONRPC::Response(Nil).new(JSONRPC::Error.invalid_request)).to_json\nend\n"}},{"id":"handle_batch(parser:JSON::PullParser,identifier:JSON::PullParser,&block):String-instance-method","html_id":"handle_batch(parser:JSON::PullParser,identifier:JSON::PullParser,&amp;block):String-instance-method","name":"handle_batch","doc":null,"summary":null,"abstract":false,"args":[{"name":"parser","doc":null,"default_value":"","external_name":"parser","restriction":"JSON::PullParser"},{"name":"identifier","doc":null,"default_value":"","external_name":"identifier","restriction":"JSON::PullParser"}],"args_string":"(parser : JSON::PullParser, identifier : JSON::PullParser, &block) : String","source_link":"https://github.com/galvertez/jsonrpc.cr/blob/200300636766d003c24da5b79285f674e3964723/src/jsonrpc/handler.cr#L36","def":{"name":"handle_batch","args":[{"name":"parser","doc":null,"default_value":"","external_name":"parser","restriction":"JSON::PullParser"},{"name":"identifier","doc":null,"default_value":"","external_name":"identifier","restriction":"JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":""},"return_type":"String","visibility":"Public","body":"responses = [] of String\nparser.read_array do\n  identifier.read_array do\n    response = handle_request(parser, identifier, &block)\n    if response\n      responses.push(response)\n    end\n  end\nend\nJSON.build do |builder|\n  builder.array do\n    builder.raw(responses.join(','))\n  end\nend\n"}},{"id":"handle_request(parser:JSON::PullParser,identifier:JSON::PullParser,&block):String?-instance-method","html_id":"handle_request(parser:JSON::PullParser,identifier:JSON::PullParser,&amp;block):String?-instance-method","name":"handle_request","doc":null,"summary":null,"abstract":false,"args":[{"name":"parser","doc":null,"default_value":"","external_name":"parser","restriction":"JSON::PullParser"},{"name":"identifier","doc":null,"default_value":"","external_name":"identifier","restriction":"JSON::PullParser"}],"args_string":"(parser : JSON::PullParser, identifier : JSON::PullParser, &block) : String?","source_link":"https://github.com/galvertez/jsonrpc.cr/blob/200300636766d003c24da5b79285f674e3964723/src/jsonrpc/handler.cr#L19","def":{"name":"handle_request","args":[{"name":"parser","doc":null,"default_value":"","external_name":"parser","restriction":"JSON::PullParser"},{"name":"identifier","doc":null,"default_value":"","external_name":"identifier","restriction":"JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"String | Nil","visibility":"Public","body":"id = nil\nname = \"\"\nidentifier.read_object do |key|\n  case key\n  when \"method\"\n    name = String.new(identifier)\n  when \"id\"\n    id = Union(String, Int32, Nil).new(parser)\n  else\n    identifier.skip\n  end\nend\ncontext = invoke_rpc(name, parser)\nyield context\nreturn context.response.to_json\n"}}],"macros":[{"id":"expose_rpc-macro","html_id":"expose_rpc-macro","name":"expose_rpc","doc":"Gathers up all methods annotated with `@[JSONRPC::Method(\"name\")]` and defines\nthe primary action method `#invoke_rpc`\n\nIn order for this to work as expected\n- All methods annotated as a `JSONRPC::Method` must take one argument\n- The `JSONRPC::Method` annotation itself must have one String argument (the name it will be\n  accessed as remotely)\n- All methods annotated as a `JSONRPC::Method` must specify a return type\n- The last line of your class definition must be `expose_rpc`","summary":"<p>Gathers up all methods annotated with <code>@[<a href=\"../JSONRPC/Method.html\">JSONRPC::Method</a>(\"name\")]</code> and defines the primary action method <code>#invoke_rpc</code></p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/galvertez/jsonrpc.cr/blob/200300636766d003c24da5b79285f674e3964723/src/jsonrpc/handler.cr#L60","def":{"name":"expose_rpc","args":[],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    private def invoke_rpc(name : String, parser : JSON::PullParser) : JSONRPC::Context\n      case name\n      \n{% for m in @type.methods %}\n        {% anno = m.annotation(::JSONRPC::Method) %} {% if anno %}\n          {% if !anno[0] %}\n            {% raise(\"#{@type}##{m.name}'s JSONRPC::Method annotation needs a name\") %}\n          {% end %}\n          {% if m.args.size > 1 %}\n            {% raise(\"#{@type}##{m.name}: JSONRPC methods should take only 0-1 arguments\") %}\n          {% end %}\n          {% mp = m.args.first.restriction %}\n          {% mr = m.return_type %}\n      when {{ anno[0] }}\n        request = JSONRPC::Request({{ mp }}).new(parser)\n        response = begin\n            result = {{ m.name }}{% if m.args.first %}(request.params.as {{ mp }}){% end %}\n            JSONRPC::Response({{ mr }}).new(result, request.id)\n          rescue result : JSONRPC::Error\n            JSONRPC::Response(Nil).new(result, request.id)\n          rescue\n            JSONRPC::Response(Nil).new(JSONRPC::Error.internal_error, request.id)\n          end\n        JSONRPC::Context({{ mp }}, {{ mr }}).new(request, response)\n        {% end %}\n      {% end %}\n\n      when \"\"\n        \n# We don't care what type the params are, because the request cannot be processed\n\n        \n# without a name\n\n        request = JSONRPC::Request(JSON::Any).new(parser)\n        result = JSONRPC::Error.invalid_request(\"method cannot be empty\")\n        response = JSONRPC::Response(Nil).new(result, request.id)\n        JSONRPC::Context(JSON::Any, Nil).new(request, response)\n      \nelse\n        \n# We don't care what type the params are, because the request cannot be processed\n\n        \n# if it is not registered\n\n        request = JSONRPC::Request(JSON::Any).new(parser)\n        result = JSONRPC::Error.method_not_found\n        response = JSONRPC::Response(Nil).new(result, request.id)\n        JSONRPC::Context(JSON::Any, Nil).new(request, response)\n      \nend\n    \nend\n  \n"}}],"types":[{"html_id":"github.com/galvertez/jsonrpc.cr/JSONRPC/Handler/Premade","path":"JSONRPC/Handler/Premade.html","kind":"module","full_name":"JSONRPC::Handler::Premade","name":"Premade","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"jsonrpc/handler/premade.cr","line_number":1,"url":"https://github.com/galvertez/jsonrpc.cr/blob/200300636766d003c24da5b79285f674e3964723/src/jsonrpc/handler/premade.cr"}],"repository_name":"github.com/galvertez/jsonrpc.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/galvertez/jsonrpc.cr/JSONRPC/Handler","kind":"class","full_name":"JSONRPC::Handler","name":"Handler"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[{"id":"list_all_methods-macro","html_id":"list_all_methods-macro","name":"list_all_methods","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/galvertez/jsonrpc.cr/blob/200300636766d003c24da5b79285f674e3964723/src/jsonrpc/handler/premade.cr#L2","def":{"name":"list_all_methods","args":[],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    @[JSONRPC::Method(\"list-all-methods\")]\n    def list_all_methods\n      \n{% all_methods = [] of Nil %}\n\n      \n{% for m in @type.methods %}\n        {% if m.annotation(JSONRPC::Method) %}\n          {% all_methods.push(m.name.stringify) %}\n        {% end %}\n      {% end %}\n\n      \n{{ all_methods }}\n\n    \nend\n  \n"}}],"types":[]}]},{"html_id":"github.com/galvertez/jsonrpc.cr/JSONRPC/Method","path":"JSONRPC/Method.html","kind":"annotation","full_name":"JSONRPC::Method","name":"Method","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"jsonrpc.cr","line_number":6,"url":"https://github.com/galvertez/jsonrpc.cr/blob/200300636766d003c24da5b79285f674e3964723/src/jsonrpc.cr"}],"repository_name":"github.com/galvertez/jsonrpc.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/galvertez/jsonrpc.cr/JSONRPC","kind":"module","full_name":"JSONRPC","name":"JSONRPC"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/galvertez/jsonrpc.cr/JSONRPC/Request","path":"JSONRPC/Request.html","kind":"class","full_name":"JSONRPC::Request(P)","name":"Request","abstract":false,"superclass":{"html_id":"github.com/galvertez/jsonrpc.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/galvertez/jsonrpc.cr/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"github.com/galvertez/jsonrpc.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/galvertez/jsonrpc.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"jsonrpc/request.cr","line_number":18,"url":"https://github.com/galvertez/jsonrpc.cr/blob/200300636766d003c24da5b79285f674e3964723/src/jsonrpc/request.cr"}],"repository_name":"github.com/galvertez/jsonrpc.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/galvertez/jsonrpc.cr/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/galvertez/jsonrpc.cr/JSONRPC","kind":"module","full_name":"JSONRPC","name":"JSONRPC"},"doc":"`Request` object to be sent to the JSONRPC server\n\n`P` can be of any type parsable by `JSON::PullParser` and buildable\nwith `JSON::Builder`\n\nAccording to\n[https://www.jsonrpc.org/specification#request_object](JSONRPC 2.0),\nspecification the params key should be any \"structured value that holds\nthe parameter values to be used during the invocation of the method\"\n\nIf the method you are invoking per `@method` is one which expects\npositional parameters, `P` should build to a JSON array\nOtherwise it should build to a JSON object\n\nThe server implementation always uses Request(JSON::Any)","summary":"<p><code><a href=\"../JSONRPC/Request.html\">Request</a></code> object to be sent to the JSONRPC server</p>","class_methods":[],"constructors":[{"id":"new(pull:JSON::PullParser)-class-method","html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"pull","doc":null,"default_value":"","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","source_link":"https://github.com/galvertez/jsonrpc.cr/blob/200300636766d003c24da5b79285f674e3964723/src/jsonrpc/request.cr#L19","def":{"name":"new","args":[{"name":"pull","doc":null,"default_value":"","external_name":"pull","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"instance = allocate\ninstance.initialize(__pull_for_json_serializable: pull)\nif instance.responds_to?(:finalize)\n  GC.add_finalizer(instance)\nend\ninstance\n"}},{"id":"new(method:String,params:P?=nil,id:SID=nil,jsonrpc=&quot;2.0&quot;)-class-method","html_id":"new(method:String,params:P?=nil,id:SID=nil,jsonrpc=&amp;quot;2.0&amp;quot;)-class-method","name":"new","doc":"Clientside can create a new `Request(P)` with direct arguments, rather than with a pullparser","summary":"<p>Clientside can create a new <code><a href=\"../JSONRPC/Request.html\">Request</a>(P)</code> with direct arguments, rather than with a pullparser</p>","abstract":false,"args":[{"name":"method","doc":null,"default_value":"","external_name":"method","restriction":"String"},{"name":"params","doc":null,"default_value":"nil","external_name":"params","restriction":"P | ::Nil"},{"name":"id","doc":null,"default_value":"nil","external_name":"id","restriction":"SID"},{"name":"jsonrpc","doc":null,"default_value":"\"2.0\"","external_name":"jsonrpc","restriction":""}],"args_string":"(method : String, params : P? = <span class=\"n\">nil</span>, id : SID = <span class=\"n\">nil</span>, jsonrpc = <span class=\"s\">&quot;2.0&quot;</span>)","source_link":"https://github.com/galvertez/jsonrpc.cr/blob/200300636766d003c24da5b79285f674e3964723/src/jsonrpc/request.cr#L41","def":{"name":"new","args":[{"name":"method","doc":null,"default_value":"","external_name":"method","restriction":"String"},{"name":"params","doc":null,"default_value":"nil","external_name":"params","restriction":"P | ::Nil"},{"name":"id","doc":null,"default_value":"nil","external_name":"id","restriction":"SID"},{"name":"jsonrpc","doc":null,"default_value":"\"2.0\"","external_name":"jsonrpc","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Request(P).allocate\n_.initialize(method, params, id, jsonrpc)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"id:SID-instance-method","html_id":"id:SID-instance-method","name":"id","doc":"An identifier established by the client. If `nil` or excluded, then\nthe client does not expect a response - this is known as a\n\"notification\" according to JSON RPC 2.0 specification","summary":"<p>An identifier established by the client.</p>","abstract":false,"args":[],"args_string":" : SID","source_link":"https://github.com/galvertez/jsonrpc.cr/blob/200300636766d003c24da5b79285f674e3964723/src/jsonrpc/request.cr#L37","def":{"name":"id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"SID","visibility":"Public","body":"@id"}},{"id":"jsonrpc:String-instance-method","html_id":"jsonrpc:String-instance-method","name":"jsonrpc","doc":"A `String` indicating the JSONRPC version","summary":"<p>A <code>String</code> indicating the JSONRPC version</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/galvertez/jsonrpc.cr/blob/200300636766d003c24da5b79285f674e3964723/src/jsonrpc/request.cr#L40","def":{"name":"jsonrpc","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@jsonrpc"}},{"id":"method:String-instance-method","html_id":"method:String-instance-method","name":"method","doc":"A `String` specifying the RPC method to be invoked.","summary":"<p>A <code>String</code> specifying the RPC method to be invoked.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/galvertez/jsonrpc.cr/blob/200300636766d003c24da5b79285f674e3964723/src/jsonrpc/request.cr#L26","def":{"name":"method","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@method"}},{"id":"params:P?-instance-method","html_id":"params:P?-instance-method","name":"params","doc":"The parameter object of the method named in `method`.\n\n`P` could be an array, or array like type in the case that\nthe named method takes positional arguments.","summary":"<p>The parameter object of the method named in <code><a href=\"../JSONRPC/Request.html#method%3AString-instance-method\">#method</a></code>.</p>","abstract":false,"args":[],"args_string":" : P?","source_link":"https://github.com/galvertez/jsonrpc.cr/blob/200300636766d003c24da5b79285f674e3964723/src/jsonrpc/request.cr#L32","def":{"name":"params","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"P | ::Nil","visibility":"Public","body":"@params"}}],"macros":[],"types":[{"html_id":"github.com/galvertez/jsonrpc.cr/JSONRPC/Request/SID","path":"JSONRPC/Request/SID.html","kind":"alias","full_name":"JSONRPC::Request::SID","name":"SID","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"jsonrpc/request.cr","line_number":21,"url":"https://github.com/galvertez/jsonrpc.cr/blob/200300636766d003c24da5b79285f674e3964723/src/jsonrpc/request.cr"}],"repository_name":"github.com/galvertez/jsonrpc.cr","program":false,"enum":false,"alias":true,"aliased":"(Int32 | String | Nil)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/galvertez/jsonrpc.cr/JSONRPC/Request","kind":"class","full_name":"JSONRPC::Request(P)","name":"Request"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"github.com/galvertez/jsonrpc.cr/JSONRPC/Response","path":"JSONRPC/Response.html","kind":"class","full_name":"JSONRPC::Response(R)","name":"Response","abstract":false,"superclass":{"html_id":"github.com/galvertez/jsonrpc.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/galvertez/jsonrpc.cr/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"github.com/galvertez/jsonrpc.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/galvertez/jsonrpc.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"jsonrpc/response.cr","line_number":3,"url":"https://github.com/galvertez/jsonrpc.cr/blob/200300636766d003c24da5b79285f674e3964723/src/jsonrpc/response.cr"}],"repository_name":"github.com/galvertez/jsonrpc.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/galvertez/jsonrpc.cr/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/galvertez/jsonrpc.cr/JSONRPC","kind":"module","full_name":"JSONRPC","name":"JSONRPC"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(pull:JSON::PullParser)-class-method","html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"pull","doc":null,"default_value":"","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","source_link":"https://github.com/galvertez/jsonrpc.cr/blob/200300636766d003c24da5b79285f674e3964723/src/jsonrpc/response.cr#L4","def":{"name":"new","args":[{"name":"pull","doc":null,"default_value":"","external_name":"pull","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"instance = allocate\ninstance.initialize(__pull_for_json_serializable: pull)\nif instance.responds_to?(:finalize)\n  GC.add_finalizer(instance)\nend\ninstance\n"}},{"id":"new(error:JSONRPC::Error,id:SID=nil,jsonrpc=&quot;2.0&quot;)-class-method","html_id":"new(error:JSONRPC::Error,id:SID=nil,jsonrpc=&amp;quot;2.0&amp;quot;)-class-method","name":"new","doc":"Serverside can create a new `Response(R)` with direct arguments, rather than with a pullparser","summary":"<p>Serverside can create a new <code><a href=\"../JSONRPC/Response.html\">Response</a>(R)</code> with direct arguments, rather than with a pullparser</p>","abstract":false,"args":[{"name":"error","doc":null,"default_value":"","external_name":"error","restriction":"JSONRPC::Error"},{"name":"id","doc":null,"default_value":"nil","external_name":"id","restriction":"SID"},{"name":"jsonrpc","doc":null,"default_value":"\"2.0\"","external_name":"jsonrpc","restriction":""}],"args_string":"(error : JSONRPC::Error, id : SID = <span class=\"n\">nil</span>, jsonrpc = <span class=\"s\">&quot;2.0&quot;</span>)","source_link":"https://github.com/galvertez/jsonrpc.cr/blob/200300636766d003c24da5b79285f674e3964723/src/jsonrpc/response.cr#L32","def":{"name":"new","args":[{"name":"error","doc":null,"default_value":"","external_name":"error","restriction":"JSONRPC::Error"},{"name":"id","doc":null,"default_value":"nil","external_name":"id","restriction":"SID"},{"name":"jsonrpc","doc":null,"default_value":"\"2.0\"","external_name":"jsonrpc","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Response(R).allocate\n_.initialize(error, id, jsonrpc)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(result:R,id:SID=nil,jsonrpc=&quot;2.0&quot;)-class-method","html_id":"new(result:R,id:SID=nil,jsonrpc=&amp;quot;2.0&amp;quot;)-class-method","name":"new","doc":"Serverside can create a new `Response(R)` with direct arguments, rather than with a pullparser","summary":"<p>Serverside can create a new <code><a href=\"../JSONRPC/Response.html\">Response</a>(R)</code> with direct arguments, rather than with a pullparser</p>","abstract":false,"args":[{"name":"result","doc":null,"default_value":"","external_name":"result","restriction":"R"},{"name":"id","doc":null,"default_value":"nil","external_name":"id","restriction":"SID"},{"name":"jsonrpc","doc":null,"default_value":"\"2.0\"","external_name":"jsonrpc","restriction":""}],"args_string":"(result : R, id : SID = <span class=\"n\">nil</span>, jsonrpc = <span class=\"s\">&quot;2.0&quot;</span>)","source_link":"https://github.com/galvertez/jsonrpc.cr/blob/200300636766d003c24da5b79285f674e3964723/src/jsonrpc/response.cr#L27","def":{"name":"new","args":[{"name":"result","doc":null,"default_value":"","external_name":"result","restriction":"R"},{"name":"id","doc":null,"default_value":"nil","external_name":"id","restriction":"SID"},{"name":"jsonrpc","doc":null,"default_value":"\"2.0\"","external_name":"jsonrpc","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Response(R).allocate\n_.initialize(result, id, jsonrpc)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"error:JSONRPC::Error?-instance-method","html_id":"error:JSONRPC::Error?-instance-method","name":"error","doc":"This key is included if the method did not run successfully. It is\nexcluded if the method was enacted successfully.","summary":"<p>This key is included if the method did not run successfully.</p>","abstract":false,"args":[],"args_string":" : JSONRPC::Error?","source_link":"https://github.com/galvertez/jsonrpc.cr/blob/200300636766d003c24da5b79285f674e3964723/src/jsonrpc/response.cr#L23","def":{"name":"error","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"JSONRPC::Error | ::Nil","visibility":"Public","body":"@error"}},{"id":"id:SID-instance-method","html_id":"id:SID-instance-method","name":"id","doc":"Response has to include the same `@id` as its corresponding `Request`","summary":"<p>Response has to include the same <code>@id</code> as its corresponding <code><a href=\"../JSONRPC/Request.html\">Request</a></code></p>","abstract":false,"args":[],"args_string":" : SID","source_link":"https://github.com/galvertez/jsonrpc.cr/blob/200300636766d003c24da5b79285f674e3964723/src/jsonrpc/response.cr#L26","def":{"name":"id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"SID","visibility":"Public","body":"@id"}},{"id":"jsonrpc:String-instance-method","html_id":"jsonrpc:String-instance-method","name":"jsonrpc","doc":"JSON RPC version indicator.\nMust be exactly `\"2.0\"` according to spec.","summary":"<p>JSON RPC version indicator.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/galvertez/jsonrpc.cr/blob/200300636766d003c24da5b79285f674e3964723/src/jsonrpc/response.cr#L12","def":{"name":"jsonrpc","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@jsonrpc"}},{"id":"result:R?-instance-method","html_id":"result:R?-instance-method","name":"result","doc":"This key is included if the method ran successfully. It is excluded if\nthere was an error of any kind.\n\n`result` is nilable even if `R` is not; JSONRPC 2.0 specification\ndictates that this key be absent if the `error` key is present.","summary":"<p>This key is included if the method ran successfully.</p>","abstract":false,"args":[],"args_string":" : R?","source_link":"https://github.com/galvertez/jsonrpc.cr/blob/200300636766d003c24da5b79285f674e3964723/src/jsonrpc/response.cr#L19","def":{"name":"result","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"R | ::Nil","visibility":"Public","body":"@result"}}],"macros":[],"types":[{"html_id":"github.com/galvertez/jsonrpc.cr/JSONRPC/Response/SID","path":"JSONRPC/Response/SID.html","kind":"alias","full_name":"JSONRPC::Response::SID","name":"SID","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"jsonrpc/response.cr","line_number":6,"url":"https://github.com/galvertez/jsonrpc.cr/blob/200300636766d003c24da5b79285f674e3964723/src/jsonrpc/response.cr"}],"repository_name":"github.com/galvertez/jsonrpc.cr","program":false,"enum":false,"alias":true,"aliased":"(Int32 | String | Nil)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/galvertez/jsonrpc.cr/JSONRPC/Response","kind":"class","full_name":"JSONRPC::Response(R)","name":"Response"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]}]},{"html_id":"github.com/galvertez/jsonrpc.cr/Something","path":"Something.html","kind":"class","full_name":"Something","name":"Something","abstract":false,"superclass":{"html_id":"github.com/galvertez/jsonrpc.cr/JSONRPC/Client","kind":"class","full_name":"JSONRPC::Client","name":"Client"},"ancestors":[{"html_id":"github.com/galvertez/jsonrpc.cr/JSONRPC/Client","kind":"class","full_name":"JSONRPC::Client","name":"Client"},{"html_id":"github.com/galvertez/jsonrpc.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/galvertez/jsonrpc.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"jsonrpc.cr","line_number":19,"url":"https://github.com/galvertez/jsonrpc.cr/blob/200300636766d003c24da5b79285f674e3964723/src/jsonrpc.cr"}],"repository_name":"github.com/galvertez/jsonrpc.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"first_method(params:Hash(String,String)):JSONRPC::Context(Hash(String,String),String)-instance-method","html_id":"first_method(params:Hash(String,String)):JSONRPC::Context(Hash(String,String),String)-instance-method","name":"first_method","doc":"this is the first method documentation","summary":"<p>this is the first method documentation</p>","abstract":false,"args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"Hash(String, String)"}],"args_string":"(params : Hash(String, String)) : JSONRPC::Context(Hash(String, String), String)","source_link":"https://github.com/galvertez/jsonrpc.cr/blob/200300636766d003c24da5b79285f674e3964723/src/jsonrpc.cr#L29","def":{"name":"first_method","args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"Hash(String, String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"JSONRPC::Context(Hash(String, String), String)","visibility":"Public","body":"request = JSONRPC::Request(Hash(String, String)).new(params)\n__temp_26 = submit_request(request.to_json)\nresponse = JSONRPC::Response(String).new(__temp_26)\nJSONRPC::Context(Hash(String, String), String).new(request, response)\n"}},{"id":"second_method(params:Hash(String,String)):JSONRPC::Context(Hash(String,String),Int32)-instance-method","html_id":"second_method(params:Hash(String,String)):JSONRPC::Context(Hash(String,String),Int32)-instance-method","name":"second_method","doc":"this is the second method documentation","summary":"<p>this is the second method documentation</p>","abstract":false,"args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"Hash(String, String)"}],"args_string":"(params : Hash(String, String)) : JSONRPC::Context(Hash(String, String), Int32)","source_link":"https://github.com/galvertez/jsonrpc.cr/blob/200300636766d003c24da5b79285f674e3964723/src/jsonrpc.cr#L32","def":{"name":"second_method","args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"Hash(String, String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"JSONRPC::Context(Hash(String, String), Int32)","visibility":"Public","body":"request = JSONRPC::Request(Hash(String, String)).new(params)\n__temp_27 = submit_request(request.to_json)\nresponse = JSONRPC::Response(Int32).new(__temp_27)\nJSONRPC::Context(Hash(String, String), Int32).new(request, response)\n"}},{"id":"submit_batch(json:String):String-instance-method","html_id":"submit_batch(json:String):String-instance-method","name":"submit_batch","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"String"}],"args_string":"(json : String) : String","source_link":"https://github.com/galvertez/jsonrpc.cr/blob/200300636766d003c24da5b79285f674e3964723/src/jsonrpc.cr#L24","def":{"name":"submit_batch","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"json"}},{"id":"submit_request(json:String):String-instance-method","html_id":"submit_request(json:String):String-instance-method","name":"submit_request","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"String"}],"args_string":"(json : String) : String","source_link":"https://github.com/galvertez/jsonrpc.cr/blob/200300636766d003c24da5b79285f674e3964723/src/jsonrpc.cr#L20","def":{"name":"submit_request","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"json"}}],"macros":[],"types":[]}]}})